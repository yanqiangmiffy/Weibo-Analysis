official_gov_nickname_words = (
    '政府,官方,政务,司法,市委,共青团,团委,中共,官微,发布,网信,便民,派出所,公安,警方,民政,街道,管委,党委,法院,交警,发改委,党,检察,妇联,政协,省,局,北京,天津,河北,山西,'
    '内蒙古,辽宁,吉林,黑龙江,上海,江苏,浙江,安徽,福建,江西,山东,河南,湖北,湖南,广东,广西,海南,重庆,四川,贵州,云南,西藏,陕西,甘肃,青海,宁夏,新疆,社区,政,法,县,市,省,'
    '中心,文明,平安,宣传,生活,石家庄,唐山,秦皇岛,邯郸,邢台,保定,张家口,承德,沧州,廊坊,衡水,太原,大同,阳泉,长治,晋城,朔州,晋中,运城,忻州,临汾,吕梁,呼和浩特,包头,乌海,赤峰,'
    '通辽,鄂尔多斯,呼伦贝尔,巴彦淖尔,乌兰察布,沈阳,大连,鞍山,抚顺,本溪,丹东,锦州,营口,阜新,辽阳,盘锦,铁岭,朝阳,葫芦岛,长春,吉林,四平,辽源,通化,白山,松原,白城,哈尔滨,'
    '齐齐哈尔,鸡西,鹤岗,双鸭山,大庆,伊春,佳木斯,七台河,牡丹江,黑河,绥化,南京,无锡,徐州,常州,苏州,南通,连云港,淮安,盐城,扬州,镇江,泰州,宿迁,杭州,宁波,温州,嘉兴,湖州,绍兴,'
    '金华,衢州,舟山,台州,丽水,合肥,芜湖,蚌埠,淮南,马鞍山,淮北,铜陵,安庆,黄山,阜阳,宿州,滁州,六安,宣城,池州,亳州,福州,厦门,莆田,三明,泉州,漳州,南平,龙岩,宁德,南昌,景德镇,'
    '萍乡,九江,抚州,鹰潭,赣州,吉安,宜春,新余,上饶,济南,青岛,淄博,枣庄,东营,烟台,潍坊,济宁,泰安,威海,日照,临沂,德州,聊城,滨州,菏泽,郑州,开封,洛阳,平顶山,安阳,鹤壁,新乡,'
    '焦作,濮阳,许昌,漯河,三门峡,南阳,商丘,信阳,周口,驻马店,武汉,黄石,十堰,宜昌,襄阳,鄂州,荆门,孝感,荆州,黄冈,咸宁,随州,长沙,株洲,湘潭,衡阳,邵阳,岳阳,常德,张家界,益阳,'
    '郴州,永州,怀化,娄底,韶关,深圳,珠海,汕头,佛山,江门,湛江,茂名,肇庆,惠州,梅州,汕尾,河源,阳江,清远,东莞,中山,潮州,揭阳,云浮,南宁,柳州,桂林,梧州,北海,防城港,钦州,贵港,'
    '玉林,百色,贺州,河池,来宾,崇左,海口,三亚,三沙,儋州,成都,自贡,攀枝花,泸州,德阳,绵阳,广元,遂宁,内江,乐山,南充,眉山,宜宾,广安,达州,雅安,巴中,资阳,贵阳,六盘水,遵义,安顺,'
    '毕节,铜仁,昆明,曲靖,玉溪,保山,昭通,丽江,普洱,临沧,拉萨,日喀则,昌都,林芝,山南,那曲,西安,铜川,宝鸡,咸阳,渭南,延安,汉中,榆林,安康,商洛,兰州,嘉峪关,金昌,白银,天水,武威,'
    '张掖,平凉,酒泉,庆阳,定西,陇南,西宁,海东,银川,石嘴山,吴忠,固原,中卫,乌鲁木齐,克拉玛依,吐鲁番,哈密,清风,那点事,廉,频道,美丽,中国,邪教,和谐,活力,公益,世界').split(
    ',')
official_gov_from_words = '政府,专业'.split(',')
news_outlet_words = (
    '新闻,广播,经济报,早报,晨报,日报,晚报,资讯,之声,电台,电视台,热线,融媒,网站,新华,在线,精选,新浪,乐活,直播,头条,今日,民生,论坛,视频,时讯,杂志,周刊,财经,网,同城,卫视,'
    '报,房产,微博,学院,大学,事务所,集团,公司,视界,身边事,传媒,工作室').split(',')

auto_retweet_words = '网页链接,微博问答,发布了头条文章,身边事,查看图片'.split(',')
from_chaohua_words = '超话,视频'.split(',')


def judge_oficial(row):
    """
    Index(['_id', 'nickname', 'time', 'from', 'content', 'content_full',
       'user_link', 'forward_nickname', 'forward_uid', 'forward_content'],
      dtype='object')
    :param row:
    :return:
    """

    for word in official_gov_nickname_words:
        if word in str(row['nickname']):
            return 1
    for word in official_gov_from_words:
        if word in str(row['from']):
            return 1
    return 0


def judge_news_outlet(row):
    """
    a)	Nickname字段包含以下单词，赋值为1，反之为0
    :param row:
    :return:
    """
    for word in news_outlet_words:
        if word in str(row['nickname']):
            return 1
    return 0


def judge_ato_retweet(row):
    """
    content_concat
    :param row:
    :return:
    """
    for word in auto_retweet_words:
        if word in str(row['text']):
            return 1
    return 0


def judge_chaohua(row):
    for word in from_chaohua_words:
        if word in str(row['from']):
            return 1
    return 0
